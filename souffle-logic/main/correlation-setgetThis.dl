.decl ThisSetStmtArgInfo(?invocation:MethodInvocation, ?actual:Var, ?sig:Field, ?allowedType:Type)
.output ThisSetStmtArgInfo(IO="file",filename="ThisSetStmtArgInfo.csv",delimiter="\t")

.decl ThisSetStmtArgAssign(?sig:Field, ?basehctx:configuration.HContext, ?basevalue:Value, ?actual:Var, ?allowedType:Type)
.output ThisSetStmtArgAssign(IO="file",filename="ThisSetStmtArgAssign.csv",delimiter="\t")

.decl ThisSetStmtInstanceFieldPointsTo(?hctx:configuration.HContext, ?value:Value, ?sig:Field, ?basehctx:configuration.HContext, ?basevalue:Value)
.output ThisSetStmtInstanceFieldPointsTo(IO="file",filename="ThisSetStmtInstanceFieldPointsTo.csv",delimiter="\t")

.decl IgnoredInstanceFieldStore(?from:Var, ?base:Var, ?signature:Field, ?inmethod:Method)
.output IgnoredInstanceFieldStore(IO="file",filename="IgnoredInstanceFieldStore.csv",delimiter="\t")


//get this-setstmt and the arg pass into thisVar's field
ThisSetStmtArgInfo(?invocation, ?actual, ?sig, ?allowedType) :-
    CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?method),
    LocalThisVar(?method, ?base),
    LocalParamAssign(?method, ?localparam, ?formal),
    StoreInstanceField(?localparam, ?base, ?sig, ?method),
    FormalParam(?index, ?method, ?formal),
    Var_Type(?formal, ?allowedType),
    ActualParam(?index, ?invocation, ?actual).

IgnoredInstanceFieldStore(?localparam, ?base, ?sig, ?method) :-
    LocalThisVar(?method, ?base),
    LocalParamAssign(?method, ?localparam, ?formal),
    StoreInstanceField(?localparam, ?base, ?sig, ?method),
    FormalParam(?index, ?method, ?formal).

// add pfg edge from certain invocation's arg -> thisVar's field 
ThisSetStmtArgAssign(?sig, ?basehctx, ?basevalue, ?actual, ?allowedType) :-
    ThisSetStmtArgInfo(?invocation, ?actual, ?sig, ?allowedType),
    (SpecialMethodInvocation_Base(?invocation, ?base);
    VirtualMethodInvocation_Base(?invocation, ?base)),
    VarPointsTo(?basehctx, ?basevalue, ?basectx, ?base).

//[be careful!] : basevalue check needed
// [be careful!] : type check needed

ThisSetStmtInstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue) :-
    VarPointsTo(?hctx, ?value, ?actualctx, ?actual),
    ThisSetStmtArgAssign(?sig, ?basehctx, ?basevalue, ?actual, ?allowedType),
    //double check
    !Value_Null(?value),
    !Value_Null(?basevalue),
    Value_Type(?value, ?type),
    basic.SubtypeOf(?type, ?allowedType).

HostOfInstanceField(?host, ?basevalue, ?sig):-
    ThisSetStmtArgAssign(?sig, _, ?basevalue, ?from, _),
    HostOfVar(?host, ?from).
ContainerKindOfInstanceField(?basevalue, ?sig, ?kind) :-
    ThisSetStmtArgAssign(?sig, _, ?basevalue, ?from, _),
    ContainerKindOfVar(?from, ?kind).
InstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue) :-
    ThisSetStmtInstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue).

.decl NotBannedReturnVar(?ret:Var)
.decl ThisGetStmtResultInfo(?invocation:MethodInvocation, ?resultctx: configuration.Context, ?result:Var, ?sig:Field, ?allowedType:Type, ?callee:Method)
.decl ThisGetStmtResultAssign(?sig:Field, ?basehctx:configuration.HContext, ?basevalue:Value, ?resultctx: configuration.Context, ?result:Var, ?allowedType:Type)
.decl ThisGetStmtVarPointsTo(?hctx:configuration.HContext, ?value:Value, ?resultctx:configuration.Context, ?result:Var)
.output ThisGetStmtVarPointsTo(IO="file",filename="ThisGetStmtVarPointsTo.csv",delimiter="\t")


//get pattern for this
// VarpointsTo() :- NotBannedReturnVar(), .....
// Callgraph :- VarPointsTo(),...
// NotBannedReturnVar :- Callgraph..., !inputVar(...)
NotBannedReturnVar(?ret) :-
    CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?method),
    LocalThisVar(?method, ?base),
    ReturnVar(?ret, ?method),
    !LoadInstanceField(?base, _, ?ret, ?method).

NotBannedReturnVar(?ret) :-
    CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?method),
    ReturnVar(?ret, ?method),
    !LocalThisVar(?method, _).


ThisGetStmtResultInfo(?invocation, ?callerCtx, ?result, ?sig, ?allowedType, ?method) :-
    CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?method),
    LocalThisVar(?method, ?base),
    ReturnVar(?ret, ?method),
    LoadInstanceField(?base, ?sig, ?ret, ?method),
    Var_Type(?result, ?allowedType),
    AssignReturnValue(?invocation,?result).

//有点小问题，应该是对invocation获取对应的callee针对的那个baseObj.先这么写
ThisGetStmtResultAssign(?sig, ?basehctx, ?basevalue, ?resultctx, ?result, ?allowedType) :-
    ThisGetStmtResultInfo(?invocation, ?resultctx, ?result, ?sig, ?allowedType, ?callee),
    (SpecialMethodInvocation_Base(?invocation, ?base);
    VirtualMethodInvocation_Base(?invocation, ?base)),
    VarPointsTo(?basehctx, ?basevalue, ?basectx, ?base),
    !RelatedCollectionOutMethod(?callee).


//[be careful!] : basevalue check needed
//[be careful!] : type check needed
ThisGetStmtVarPointsTo(?hctx, ?value, ?resultctx, ?result) :-
    InstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue),
    ThisGetStmtResultAssign(?sig, ?basehctx, ?basevalue, ?resultctx, ?result, ?allowedType),
    //double check
    !Value_Null(?value),
    !Value_Null(?basevalue),
    Value_Type(?value, ?type),
    basic.SubtypeOf(?type, ?allowedType).

HostOfVar(?host, ?to):-
    ThisGetStmtResultAssign(?sig, _, ?basevalue, _, ?to, _),
    HostOfInstanceField(?host, ?basevalue, ?sig).
ContainerKindOfVar(?to, ?kind) :-
    ThisGetStmtResultAssign(?sig, _, ?basevalue, _, ?to, _),
    ContainerKindOfInstanceField(?basevalue, ?sig, ?kind).

VarPointsTo(?hctx, ?value, ?ctx, ?var):-
    ThisGetStmtVarPointsTo(?hctx, ?value, ?ctx, ?var).

