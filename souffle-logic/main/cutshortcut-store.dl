//store part
.decl IgnoredInstanceFieldStore(?from:Var, ?base:Var, ?signature:Field, ?inmethod:Method)
//.output IgnoredInstanceFieldStore(IO="file",filename="IgnoredInstanceFieldStore.csv",delimiter="\t")

.decl AbstractStoreCandidate(?from:Var, ?base:Var, ?sig:Field, ?inmethod:Method, ?fromAllowedType:Type, ?baseAllowedType:Type)
//.output AbstractStoreCandidate(IO="file",filename="AbstractStoreCandidate.csv",delimiter="\t")

.decl AbstractInstanceStore(?from:Var, ?base:Var, ?sig:Field, ?inmethod:Method, ?fromAllowedType:Type, ?baseAllowedType:Type)
//.output AbstractInstanceStore(IO="file",filename="AbstractInstanceStore.csv",delimiter="\t")

.decl AbstractInstanceFieldPointsTo(?htcx:configuration.HContext, ?value:Value, ?sig:Field, ?basehctx:configuration.HContext, ?basevalue:Value)
//.output AbstractInstanceFieldPointsTo(IO="file",filename="AbstractInstanceFieldPointsTo.csv",delimiter="\t")

.decl ReachableMethodFromOtherSource(?method:Method)
//.output ReachableMethodFromOtherSource(IO="file",filename="ReachableMethodFromOtherSource.csv",delimiter="\t")


ReachableMethodFromOtherSource(?register):-
    ?register = "<java.lang.ref.Finalizer: void register(java.lang.Object)>".

ReachableMethodFromOtherSource(?meth) :-
    ForcedReachable(?meth).

ReachableMethodFromOtherSource(?method) :-
    basic.MainMethodDeclaration(?method).

ReachableMethodFromOtherSource(?method) :-
    ImplicitReachable(?method).

ReachableMethodFromOtherSource(?clinit) :-
    ClassInitializer(_, ?clinit).

ReachableMethodFromOtherSource(?run) :-
#if defined(JRE13) || defined(JRE14)
    ?start = "<java.lang.Thread: void start()>",
#else
    ?start = "<java.lang.Thread: void start0()>",
#endif // JRE13, JRE14
    ThisVar(?start, ?startThis),
    Var_Type(?startThis, ?varType),
    basic.MethodLookup("run", "void()", ?varType, ?run).

ReachableMethodFromOtherSource(?signature) :-
    ?signature = "<java.lang.ThreadGroup: void <init>()>".
ReachableMethodFromOtherSource(?signature) :-
    ?signature = "<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>".
ReachableMethodFromOtherSource(?signature) :-
    ?signature = "<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>".

// instance field store need to be ignored (without passing pts from var ?from to baseObj's field)
// base.sig = from
// both base and from are inmethod's formal param(or thisVar)
//InvolvedMethod(?inmethod),
IgnoredInstanceFieldStore(?from, ?base, ?sig, ?inmethod) :- 
    StoreInstanceField(?from, ?base, ?sig, ?inmethod),
    FormalParamNotRedefinedExceptForSpecialDefine(?inmethod, ?base, _),
    FormalParamNotRedefinedExceptForSpecialDefine(?inmethod, ?from, _),
    ?inmethod != "<java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>",
    ?inmethod != "<java.lang.ThreadGroup: void <init>(java.lang.Void,java.lang.ThreadGroup,java.lang.String)>",
    !ReachableMethodFromOtherSource(?inmethod).

.decl AbstractStoreCandidateTemp(?newfrom:Var, ?newbase:Var, ?caller:Method, ?callee:Method, ?baseindex:number, ?fromindex:number)
//.output AbstractStoreCandidateTemp(IO="file",filename="AbstractStoreCandidateTemp.csv",delimiter="\t")

.decl AbstractStoreCandidateTemp2(?fromindex:number, ?baseindex:number, ?callee:Method, ?sig:Field, ?fromAllowedType:Type, ?baseAllowedType:Type)
//.output AbstractStoreCandidateTemp2(IO="file",filename="AbstractStoreCandidateTemp2.csv",delimiter="\t")

AbstractStoreCandidateTemp2(?fromindex, ?baseindex, ?callee, ?sig, ?fromAllowedType, ?baseAllowedType):-
    IgnoredInstanceFieldStore(?from, ?base, ?sig, ?callee),
    Var_Type(?from, ?fromAllowedType),
    Var_Type(?base, ?baseAllowedType),
    MethodFormalParamAndThisIncludingLocal(?fromindex, ?callee, ?from),
    MethodFormalParamAndThisIncludingLocal(?baseindex, ?callee, ?base).

AbstractStoreCandidateTemp(?newfrom, ?newbase, ?caller, ?callee, ?baseindex, ?fromindex):-
    CallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    InvocationActualParamAndBase(?baseindex, ?invocation, ?newbase),
    InvocationActualParamAndBase(?fromindex, ?invocation, ?newfrom).

AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidateTemp(?newfrom, ?newbase, ?caller, ?callee, ?baseindex, ?fromindex),
    AbstractStoreCandidateTemp2(?fromindex, ?baseindex, ?callee, ?sig, ?fromAllowedType, ?baseAllowedType).

// InvolvedMethod(?callee),
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?callee, ?fromAllowedType, ?baseAllowedType),
    CallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?base, ?baseindex),
    InvocationActualParamAndBase(?baseindex, ?invocation, ?newbase),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?from, ?fromindex),
    InvocationActualParamAndBase(?fromindex, ?invocation, ?newfrom).


AbstractInstanceStore(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType),
    !FormalParamNotRedefinedExceptForSpecialDefine(?inmethod, ?from,_).
AbstractInstanceStore(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType),
    !FormalParamNotRedefinedExceptForSpecialDefine(?inmethod, ?base,_).
AbstractInstanceStore(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?inmethod, ?fromAllowedType, ?baseAllowedType),
    ReachableMethodFromOtherSource(?inmethod).
    

.decl AbstractInstanceFieldPointsToTemp(?from:Var, ?basehctx:configuration.HContext, ?basevalue:Value, ?sig:Field, ?fromAllowedType:Type)
//.output AbstractInstanceFieldPointsToTemp(IO="file",filename="AbstractInstanceFieldPointsToTemp.csv",delimiter="\t")

AbstractInstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue) :-
    AbstractInstanceFieldPointsToTemp(?from, ?basehctx, ?basevalue, ?sig, ?fromAllowedType),
    VarPointsTo(?hctx, ?value, _, ?from),
    NotSpecialObject(?value),
    Value_Type(?value, ?valuetype),
    basic.SubtypeOf(?valuetype, ?fromAllowedType).

AbstractInstanceFieldPointsToTemp(?from, ?basehctx, ?basevalue, ?sig, ?fromAllowedType):-
    AbstractInstanceStore(?from, ?base, ?sig, _, ?fromAllowedType, ?baseAllowedType),
    VarPointsTo(?basehctx, ?basevalue, _, ?base),
    !Value_Null(?basevalue),
    Value_Type(?basevalue, ?basevaluetype),
    basic.SubtypeOf(?basevaluetype, ?baseAllowedType),
    Field_DeclaringType(?sig, ?declaringClass),
    basic.SubtypeOf(?basevaluetype, ?declaringClass).
    

//optimize this rule
.decl HostOfInstanceFieldTemp(?from:Var, ?basevalue:Value, ?sig:Field)
//.output HostOfInstanceFieldTemp(IO="file",filename="HostOfInstanceFieldTemp.csv",delimiter="\t")

#ifdef CONTAINER
HostOfInstanceField(?basevalue, ?sig, ?kind, ?host):-
    HostOfInstanceFieldTemp(?from, ?basevalue, ?sig),
    HostOfVar(?from, ?kind, ?host).
    .plan 1:(2,1)
HostOfInstanceFieldTemp(?from, ?basevalue, ?sig):-
    AbstractInstanceStore(?from, ?base, ?sig, _, _, _),
    VarPointsTo(_, ?basevalue, _, ?base).
#endif

InstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue) :-
    AbstractInstanceFieldPointsTo(?hctx, ?value, ?sig, ?basehctx, ?basevalue).

//special handling of reflection to ensure soundness, and gain some precision for store part
#ifdef TAMIFLEX
//inner most store -> temp
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    IgnoredInstanceFieldStore(?from, ?base, ?sig, ?callee),
    Var_Type(?from, ?fromAllowedType),
    Var_Type(?base, ?baseAllowedType),
    MethodFormalParamAndThisIncludingLocal(-1, ?callee, ?from),
    MethodFormalParamAndThisIncludingLocal(-1, ?callee, ?base),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    TamiflexInvocationBase(?invocation, ?newbase),
    TamiflexInvocationBase(?invocation, ?newfrom).

AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    IgnoredInstanceFieldStore(?from, ?base, ?sig, ?callee),
    Var_Type(?from, ?fromAllowedType),
    Var_Type(?base, ?baseAllowedType),
    MethodFormalParamAndThisIncludingLocal(?fromindex, ?callee, ?from),
    ?fromindex != -1,
    MethodFormalParamAndThisIncludingLocal(-1, ?callee, ?base),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    TamiflexInvocationBase(?invocation, ?newbase),
    TamiflexInvocationActualParam(?invocation, ?newfrom).

AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    IgnoredInstanceFieldStore(?from, ?base, ?sig, ?callee),
    Var_Type(?from, ?fromAllowedType),
    Var_Type(?base, ?baseAllowedType),
    MethodFormalParamAndThisIncludingLocal(-1, ?callee, ?from),
    MethodFormalParamAndThisIncludingLocal(?baseindex, ?callee, ?base),
    ?baseindex != -1,
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    TamiflexInvocationBase(?invocation, ?newfrom),
    TamiflexInvocationActualParam(?invocation, ?newbase).

AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    IgnoredInstanceFieldStore(?from, ?base, ?sig, ?callee),
    Var_Type(?from, ?fromAllowedType),
    Var_Type(?base, ?baseAllowedType),
    MethodFormalParamAndThisIncludingLocal(?fromindex, ?callee, ?from),
    MethodFormalParamAndThisIncludingLocal(?baseindex, ?callee, ?base),
    ?baseindex != -1,
    ?fromindex != -1,
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    TamiflexInvocationActualParam(?invocation, ?newfrom),
    TamiflexInvocationActualParam(?invocation, ?newbase).

//temp->temp

// InvolvedMethod(?callee),
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?callee, ?fromAllowedType, ?baseAllowedType),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?base, -1),
    TamiflexInvocationBase(?invocation, ?newbase),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?from, -1),
    TamiflexInvocationBase(?invocation, ?newfrom).

// InvolvedMethod(?callee),
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?callee, ?fromAllowedType, ?baseAllowedType),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?base, ?baseindex),
    ?baseindex != -1,
    TamiflexInvocationActualParam(?invocation, ?newbase),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?from, -1),
    TamiflexInvocationBase(?invocation, ?newfrom).

// InvolvedMethod(?callee),
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?callee, ?fromAllowedType, ?baseAllowedType),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?base, -1),
    TamiflexInvocationBase(?invocation, ?newbase),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?from, ?fromindex),
    ?fromindex != -1,
    TamiflexInvocationActualParam(?invocation, ?newfrom).

// InvolvedMethod(?callee),
AbstractStoreCandidate(?newfrom, ?newbase, ?sig, ?caller, ?fromAllowedType, ?baseAllowedType) :-
    AbstractStoreCandidate(?from, ?base, ?sig, ?callee, ?fromAllowedType, ?baseAllowedType),
    TamiflexCallGraphEdge(_, ?invocation, _, ?callee),
    Instruction_Method(?invocation, ?caller),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?base, ?baseindex),
    ?baseindex != -1,
    TamiflexInvocationActualParam(?invocation, ?newbase),
    FormalParamNotRedefinedExceptForSpecialDefine(?callee, ?from, ?fromindex),
    ?fromindex != -1,
    TamiflexInvocationActualParam(?invocation, ?newfrom).

#endif //TAMIFLEX