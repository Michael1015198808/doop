//collection 3-obj uses 3obj-2heap on collection methods : 
//Context-sensitive pointer analysis with context of 3 
//object and 2 context-sensitive heap abstraction.

#include "../../main/single-phase-analysis.dl"
#include "../../main/configuration.dl"

.comp Collection3objConfiguration : AbstractConfiguration {

    //in this analysis the real context is a triple of Values and the
    //real heap context is a pair of Values
    .type Context = [ value1:Value, value2:Value, value3:Value ]
    .type HContext = [ value1:Value, value2:Value ]

    ContextResponse(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, ?calleeCtx) :-
        ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, _),
        ?hctx = [?hctxValue1, ?hctxValue2],
        ?calleeCtx = [?hctxValue1, ?hctxValue2, ?value].
      
    StaticContextResponse(?callerCtx, ?invo, ?calleeCtx) :-
        StaticContextRequest(?callerCtx, ?invo),
        ?calleeCtx = ?callerCtx.

    //heap context : all obj use 2context-sensitive heap abstraction.
    RecordContextResponse(?ctx, ?value, ?var, ?hctx) :-
        RecordContextRequest(?ctx, ?value, ?var),      
        ?ctx = [?ctxValue1, ?ctxValue2, ?ctxValue3],
        ?hctx = [?ctxValue2, ?ctxValue3],
        ?ctxValue1 = ?ctxValue1.

    InitContextResponse(?value, ?ctx) :-
        InitContextRequest(?value),
        ?ctx = [?value, ?value, ?value].

    InitHContextResponse(?value, ?hctx) :-
        InitHContextRequest(?value),
        ?hctx = [?value, ?value].

}