Map-Value	<java.util.HashMap$Entry: java.lang.Object setValue(java.lang.Object)>	0	java.util.HashMap
Map-Value	<java.util.IdentityHashMap$EntryIterator: java.lang.Object setValue(java.lang.Object)>	0	java.util.IdentityHashMap
Map-Value	<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object setValue(java.lang.Object)>	0	java.util.AbstractMap
Map-Value	<java.util.TreeMap$Entry: java.lang.Object setValue(java.lang.Object)>	0	java.util.TreeMap
Map-Value	<java.util.AbstractMap$SimpleEntry: java.lang.Object setValue(java.lang.Object)>	0	java.util.AbstractMap
Map-Value	<java.util.EnumMap$EntryIterator: java.lang.Object setValue(java.lang.Object)>	0	java.util.EnumMap
Map-Value	<java.util.Hashtable$Entry: java.lang.Object setValue(java.lang.Object)>	0	java.util.Hashtable
Map-Value	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>	0	java.util.Collections$CheckedMap
Map-Value	<java.util.concurrent.ConcurrentHashMap$WriteThroughEntry: java.lang.Object setValue(java.lang.Object)>	0	java.util.concurrent.ConcurrentHashMap
Map-Value	<java.util.WeakHashMap$Entry: java.lang.Object setValue(java.lang.Object)>	0	java.util.WeakHashMap
Col-Value	<java.util.LinkedList$ListItr: void add(java.lang.Object)>	0	java.util.LinkedList
