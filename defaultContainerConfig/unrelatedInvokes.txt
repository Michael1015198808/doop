<java.util.AbstractList$ListItr: void set(java.lang.Object)>	11
<java.util.AbstractList$ListItr: void add(java.lang.Object)>	7
<java.util.Collections: void sort(java.util.List)>	10
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>	10
<java.util.Collections: void reverse(java.util.List)>	22
<java.util.Collections: void reverse(java.util.List)>	23
<java.util.Collections: void shuffle(java.util.List,java.util.Random)>	28
<java.util.Collections: void swap(java.util.List,int,int)>	5
<java.util.Collections: void swap(java.util.List,int,int)>	6
<java.util.Collections: void copy(java.util.List,java.util.List)>	18
<java.util.Collections: void copy(java.util.List,java.util.List)>	28
<java.util.AbstractList: boolean addAll(int,java.util.Collection)>	10
<java.util.AbstractQueue: boolean addAll(java.util.Collection)>	17
<java.util.AbstractQueue: boolean add(java.lang.Object)>	2
<java.util.PriorityQueue: boolean add(java.lang.Object)>	2
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>	7
<java.util.Collections$CheckedCollection: boolean addAll(java.util.Collection)>	18
<java.util.AbstractSequentialList: boolean addAll(int,java.util.Collection)>	9
<java.util.Vector: void add(int,java.lang.Object)>	3
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>	3
<java.security.Provider: void putAll(java.util.Map)>	4
<java.security.Provider: void putAll(java.util.Map)>	7
<java.security.Provider: void putAll(java.util.Map)>	15
<java.security.Provider: void putAll(java.util.Map)>	18
<java.security.Provider: void putAll(java.util.Map)>	19
<java.util.AbstractMap: void putAll(java.util.Map)>	10
<java.util.jar.Attributes: void putAll(java.util.Map)>	17
<java.util.TreeMap: void putAll(java.util.Map)>	33
<java.util.IdentityHashMap: void putAll(java.util.Map)>	17
<java.util.HashMap: void putAll(java.util.Map)>	31
<java.util.Collections$CheckedMap: void putAll(java.util.Map)>	35
<java.util.WeakHashMap: void putAll(java.util.Map)>	31
<java.util.Hashtable: void putAll(java.util.Map)>	10
<java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>	10
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>	8
<java.util.ArrayDeque: boolean add(java.lang.Object)>	2
<java.util.ArrayDeque: boolean offer(java.lang.Object)>	2
<java.util.ArrayDeque: void push(java.lang.Object)>	2
<java.util.ArrayDeque: boolean offerFirst(java.lang.Object)>	2
<java.util.ArrayDeque: boolean offerLast(java.lang.Object)>	2
<java.util.concurrent.DelayQueue: boolean add(java.util.concurrent.Delayed)>	2
<java.util.concurrent.DelayQueue: boolean add(java.lang.Object)>	3
<java.util.concurrent.DelayQueue: void put(java.util.concurrent.Delayed)>	2
<java.util.concurrent.DelayQueue: void put(java.lang.Object)>	3
<java.util.concurrent.DelayQueue: boolean offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit)>	4
<java.util.concurrent.DelayQueue: boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)>	5
<java.util.concurrent.DelayQueue: boolean offer(java.lang.Object)>	3
<java.util.Stack: java.lang.Object push(java.lang.Object)>	2
<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>/	3
<soot.jimple.spark.ondemand.genericutil.ArraySet: boolean addAll(soot.jimple.spark.ondemand.genericutil.ArraySet)>	7
<soot.jimple.spark.ondemand.genericutil.ArraySet: boolean addAll(java.util.Collection)>	7
<soot.util.ArraySet: void <init>(java.lang.Object[])>	8
<soot.util.ArraySet: boolean addAll(java.util.Collection)>	13
<soot.util.ArraySet: void <init>(java.lang.Object[])>	8
<soot.jimple.toolkits.annotation.arraycheck.BoundedPriorityList: boolean addAll(java.util.Collection)>	7
<soot.util.HashChain: void insertBefore(soot.util.Chain,java.lang.Object)>/	13
<soot.util.HashChain: void insertBefore(java.util.List,java.lang.Object)>	13
<soot.util.HashChain: void insertAfter(soot.util.Chain,java.lang.Object)>	14
<soot.util.HashChain: boolean add(java.lang.Object)>	2
<soot.PatchingChain: void insertBefore(java.util.List,java.lang.Object)>	17
<soot.shimple.internal.SPatchingChain: boolean add(soot.Unit)>	3
<soot.shimple.internal.SPatchingChain: void insertAfter(soot.Unit,soot.Unit)>	4
<soot.shimple.internal.SPatchingChain: void insertAfter(java.util.List,soot.Unit)>	10
<soot.shimple.internal.SPatchingChain: void insertBefore(soot.Unit,soot.Unit)>	4
<soot.shimple.internal.SPatchingChain: void insertBefore(java.lang.Object,java.lang.Object)>	5
<soot.shimple.internal.SPatchingChain: void insertBefore(java.util.List,java.lang.Object)>	4
<soot.shimple.internal.SPatchingChain: void insertAfter(java.util.List,java.lang.Object)>	4
<soot.shimple.internal.SPatchingChain: void insertAfter(java.lang.Object,java.lang.Object)>	5
<soot.shimple.internal.SPatchingChain: boolean add(java.lang.Object)>	3
<soot.util.IterableSet: boolean add(java.lang.Object)>	12
<soot.util.PhaseDumper$PhaseStack: java.lang.String push(java.lang.String)>	2
<com.itextpdf.text.Section: void add(int,com.itextpdf.text.Element)>/	14
<com.itextpdf.text.Section: boolean addAll(java.util.Collection)>/	7
<com.itextpdf.text.Section: boolean add(com.itextpdf.text.Element)>/	19
<com.itextpdf.text.Section: boolean add(com.itextpdf.text.Element)>/	35
<com.itextpdf.text.Section: boolean add(com.itextpdf.text.Element)>/	39
<com.itextpdf.text.Phrase: void add(int,com.itextpdf.text.Element)>/	23
<com.itextpdf.text.Phrase: void add(int,com.itextpdf.text.Element)>/	37
<com.itextpdf.text.Phrase: boolean add(com.itextpdf.text.Element)>/	28
<com.itextpdf.text.Phrase: boolean addAll(java.util.Collection)>/	7
<com.itextpdf.text.Phrase: void addSpecial(com.itextpdf.text.Element)>/	2
<com.itextpdf.text.Paragraph: boolean add(com.itextpdf.text.Element)>/	11
<com.itextpdf.text.Paragraph: boolean add(com.itextpdf.text.Element)>/	15
<com.itextpdf.text.Paragraph: boolean add(com.itextpdf.text.Element)>/	20
<com.itextpdf.text.Paragraph: boolean add(com.itextpdf.text.Element)>/	38
<com.itextpdf.text.pdf.XfaForm$Stack2: java.lang.Object push(java.lang.Object)>/	2
<sun.awt.X11.XCreateWindowParams: void init(java.lang.Object[])>/	16
<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>/	3
<java.util.EnumMap: void putAll(java.util.Map)>/	15
<java.util.EnumMap: void putAll(java.util.Map)>/	16
<java.util.EnumMap: void putAll(java.util.Map)>/	19
<java.awt.RenderingHints: void putAll(java.util.Map)>/	25
<soot.PatchingChain: void insertBefore(soot.util.Chain,java.lang.Object)>/	17
<org.jdom.ContentList: boolean addAll(int,java.util.Collection)>/	34
<org.jdom.ContentList: void add(int,java.lang.Object)>/	12
<org.jdom.AttributeList: void add(int,java.lang.Object)>/	13
<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>/	47
<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>/	52
<org.jdom.AttributeList: java.lang.Object set(int,java.lang.Object)>/	14
<org.jdom.ContentList$FilterList: void add(int,java.lang.Object)>/	8
<org.jdom.ContentList$FilterList: java.lang.Object set(int,java.lang.Object)>/	33
<com.sleepycat.collections.StoredCollection: boolean addAll(java.util.Collection)>/	9